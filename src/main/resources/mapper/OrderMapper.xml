<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cosine.demo.dao.OrderDao">
    <resultMap id="BaseResultMap" type="com.cosine.demo.domain.Order">
        <result column="order_id" property="orderId" />
        <result column="order_title" property="orderTitle" />
        <result column="order_price" property="orderPrice" />
        <result column="order_time" property="orderTime" />
        <result column="order_paystatus" property="orderPayStatus" />
        <result column="order_deletestatus" property="orderDeleteStatus" />
        <result column="product_id" property="productId"/>
        <result column="product_count" property="productCount"/>
    </resultMap>

    <sql id="Base_Column_List">
        order_id, order_title, order_price, order_time, order_paystatus, order_deletestatus, product_id, product_count
    </sql>

    <insert id="insert" parameterType="com.cosine.demo.domain.Order">
        insert into order_table2(order_id,order_title,order_price,order_time,order_paystatus,order_deletestatus, product_id, product_count) values (#{orderId},#{orderTitle},#{orderPrice},#{orderTime},#{orderPayStatus},#{orderDeleteStatus}, #{productId}, #{productCount})
    </insert>
    
    <update id="delete">
        update order_table2 set order_deletestatus=1 where order_id = #{orderId}
    </update>

    <select id="findById" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from order_table2 where order_id = #{orderId} and order_deletestatus = 0
    </select>
    
    <select id="findAllByPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from order_table2 where order_deletestatus = 0
    </select>

    <select id="findByCondition" resultMap="BaseResultMap" parameterType="com.cosine.demo.dto.OrderQueryDTO">
        select <include refid="Base_Column_List"/> from order_table2 where order_deletestatus = 0
        <if test="settleOrderIdArray != null and settleOrderIdArray.length != 0">
            and order_id in
            <foreach collection="settleOrderIdArray" item="value" separator="," open="(" close=")">
                #{value}
            </foreach>
        </if>
        <if test="orderTitleArray != null and settleOrderIdArray.length != 0">
            and order_id in
            <foreach collection="orderTitleArray" item="value" separator="," open="(" close=")">
                #{value}
            </foreach>
        </if>
        <if test="orderPriceStart != null">
            and order_price >= #{orderPriceStart}
        </if>
        <if test="orderPriceEnd != null">
            and #{orderPriceEnd} >= order_price
        </if>
        <if test="orderTimeStart != null">
            and order_time >= #{orderTimeStart}
        </if>
        <if test="orderTimeEnd != null">
            and #{orderTimeEnd} >= order_time
        </if>
        limit #{offset}, #{pageSize}

    </select>

    <select id="countTotalNum" resultType="java.lang.Long" parameterType="com.cosine.demo.dto.OrderQueryDTO">
        select count(1) from order_table2 where order_deletestatus = 0
        <if test="settleOrderIdArray != null and settleOrderIdArray.length != 0">
            and order_id in
            <foreach collection="settleOrderIdArray" item="value" separator="," open="(" close=")">
                #{value}
            </foreach>
        </if>
        <if test="orderTitleArray != null and settleOrderIdArray.length != 0">
            and order_id in
            <foreach collection="orderTitleArray" item="value" separator="," open="(" close=")">
                #{value}
            </foreach>
        </if>
        <if test="orderPriceStart != null">
            and order_price >= #{orderPriceStart}
        </if>
        <if test="orderPriceEnd != null">
            and #{orderPriceEnd} >= order_price
        </if>
        <if test="orderTimeStart != null">
            and order_time >= #{orderTimeStart}
        </if>
        <if test="orderTimeEnd != null">
            and #{orderTimeEnd} >= order_time
        </if>
    </select>

    <update id="updatePriceById">
        update order_table2 set order_price = #{price} where order_id = #{orderId}
    </update>

    <update id="updatePayStatusById">
        update order_table2 set order_paystatus = 1 where order_id = #{orderId}
    </update>

</mapper>