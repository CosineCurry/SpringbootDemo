<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cosine.demo.dao.OrderDao">
    <resultMap id="BaseResultMap" type="com.cosine.demo.domain.Order">
        <result column="order_id" property="orderId" />
        <result column="order_price" property="orderPrice" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="pay_status" property="payStatus" />
        <result column="order_status" property="orderStatus" />
        <result column="user_id" property="userId"/>
    </resultMap>

    <sql id="Base_Column_List">
        order_id, order_price, create_time, update_time, pay_status, order_status, user_id
    </sql>

    <insert id="insert" parameterType="com.cosine.demo.domain.Order">
        insert into order_table(order_id, order_price, create_time, update_time, pay_status, order_status, user_id)
        values (#{orderId},#{orderPrice},#{createTime},#{updateTime}, #{payStatus}, #{payStatus}, #{userId})
    </insert>

    <update id="delete">
        update order_table set order_status = 1 where order_id = #{orderId}
    </update>

    <select id="findById" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from order_table
        where order_id = #{orderId} and order_status = 0
    </select>

    <select id="findAllByPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from order_table where order_status = 0
    </select>

    <select id="findByCondition" resultMap="BaseResultMap" parameterType="com.cosine.demo.dto.OrderQueryDTO">
        select <include refid="Base_Column_List"/> from order_table where order_status = 0
        <if test="settleOrderIdArray != null and settleOrderIdArray.length != 0">
            and order_id in
            <foreach collection="settleOrderIdArray" item="value" separator="," open="(" close=")">
                #{value}
            </foreach>
        </if>
        <if test="orderPriceStart != null">
            and order_price >= #{orderPriceStart}
        </if>
        <if test="orderPriceEnd != null">
            and #{orderPriceEnd} >= order_price
        </if>
        <if test="orderTimeStart != null">
            and create_time >= #{orderTimeStart}
        </if>
        <if test="orderTimeEnd != null">
            and #{orderTimeEnd} >= create_time
        </if>
        limit #{offset}, #{pageSize}

    </select>

    <select id="countTotalNum" resultType="java.lang.Long" parameterType="com.cosine.demo.dto.OrderQueryDTO">
        select count(1) from order_table where order_status = 0
        <if test="settleOrderIdArray != null and settleOrderIdArray.length != 0">
            and order_id in
            <foreach collection="settleOrderIdArray" item="value" separator="," open="(" close=")">
                #{value}
            </foreach>
        </if>
        <if test="orderPriceStart != null">
            and order_price >= #{orderPriceStart}
        </if>
        <if test="orderPriceEnd != null">
            and #{orderPriceEnd} >= order_price
        </if>
        <if test="orderTimeStart != null">
            and create_time >= #{orderTimeStart}
        </if>
        <if test="orderTimeEnd != null">
            and #{orderTimeEnd} >= create_time
        </if>
    </select>

    <update id="updatePriceById">
        update order_table set order_price = #{orderPrice} where order_id = #{orderId}
    </update>

    <update id="updatePayStatusById">
        update order_table set pay_status = 1 where order_id = #{orderId}
    </update>

</mapper>